apply plugin: 'java-library'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
	
	compile "com.matafe.application1:application1-core:${application1Version}"
	compile 'com.google.inject.extensions:guice-servlet:4.0'
	compileOnly "javax.servlet:javax.servlet-api:3.0.1"
	
	//TODO: fix the resources -> META-INF/resources web.jar
	// Now using eclipse.wtp.component.resource customized.
	//runtime 'com.matafe.application1:application1-web:1.0.0-SNAPSHOT'    
}

defaultTasks 'clean', 'build', 'javadoc', 'publishToMavenLocal'

jar {
    manifest {
        attributes 'Implementation-Title': project.name, 
                'Implementation-Version': project.version,
                'Built-By': System.getProperty('user.name'),
                'Build-Time': new Date().format('yyyy-MM-dd HH:mm:ss.SSS'),
                'Built-JDK': System.getProperty('java.version')
    }
}  

eclipse {
	wtp {
		component {
      		contextPath = '/application2'
      		resource sourcePath: '../application1/application1-web/src/main/webapp', deployPath: '/'
		}
	}
}




task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }           
        mavenJavaWeb(MavenPublication) {
            from components.web
        }        
    }
}

task dev {
    dependsOn 'cleanEclipse', 'eclipse'
    doLast {
        println '='.multiply(80)
        println "Eclipse files regenerated for ${project.name}"
        println '='.multiply(80)
    }
}

tasks.eclipse.dependsOn(cleanEclipse)